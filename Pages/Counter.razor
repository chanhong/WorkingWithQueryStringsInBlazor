@page "/counter"
@inject NavigationManager NavManager

<h1>Counter</h1>

<hr />
<p>Current count: @currentCount</p>
<hr />
<p>Initial count as string: @initialCountAsString</p>
<p>Initial count as decimal: @initialCountAsDecimal</p>

<button class="btn btn-primary" @onclick="@(() => currentCount++)">Click me</button>

<hr />

<a href="/Counter?initialCount=10">Start counter at 10.</a> |
<a href="/Counter?initialCount=20">Start counter at 20.</a> |
<a href="/Counter?initialCount=30">Start counter at 30.</a>

<hr />

<button class="btn btn-primary" @onclick="@(() => NavManager.NavigateTo("Counter?initialCount=10"))">Start Counter at 10</button>
<button class="btn btn-primary" @onclick="@(() => NavManager.NavigateTo("Counter?initialCount=20"))">Start Counter at 20</button>
<button class="btn btn-primary" @onclick="@(() => NavManager.NavigateTo("Counter?initialCount=30"))">Start Counter at 30</button>

@code {
    private int currentCount = 0;
    private string initialCountAsString = "";
    private decimal initialCountAsDecimal = 0m;

    protected override void OnInitialized()
    {
        GetQueryStringValues();
        NavManager.LocationChanged += (o, e) => 
        {
            GetQueryStringValues();
            StateHasChanged();
        };
    }

    private void GetQueryStringValues()
    {
        NavManager.TryGetQueryString<int>("initialCount", out currentCount);
        NavManager.TryGetQueryString<string>("initialCount", out initialCountAsString);
        NavManager.TryGetQueryString<decimal>("initialCount", out initialCountAsDecimal);
    }
}
